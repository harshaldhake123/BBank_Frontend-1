[{"C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\index.js":"1","C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\reportWebVitals.js":"2","C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\App.js":"3","C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\Components\\Dashboard.js":"4","C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\Components\\Layout\\Landing.js":"5","C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\Components\\Layout\\Footer.js":"6","C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\Components\\Layout\\Header.js":"7","C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\Components\\SignUp.js":"8"},{"size":517,"mtime":1613027590117,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1613027590118,"results":"11","hashOfConfig":"10"},{"size":1158,"mtime":1613030860150,"results":"12","hashOfConfig":"10"},{"size":220,"mtime":1613027590115,"results":"13","hashOfConfig":"10"},{"size":222,"mtime":1613027590116,"results":"14","hashOfConfig":"10"},{"size":2721,"mtime":1613027590115,"results":"15","hashOfConfig":"10"},{"size":2549,"mtime":1613027590116,"results":"16","hashOfConfig":"10"},{"size":9220,"mtime":1613030860151,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"fwpiae",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\index.js",[],["39","40"],"C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\App.js",["41","42"],"import './App.css';\r\nimport Header from \"./Components/Layout/Header\";\r\nimport Footer from \"./Components/Layout/Footer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Landing from \"./Components/Layout/Landing\";\r\nimport Dashboard from \"./Components/Dashboard\";\r\nimport SignUp from \"./Components/SignUp\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Header/>\r\n                {\r\n                    //Public Routes\r\n                }\r\n                <Route exact path={\"/\"} component={Landing}/>\r\n                {/*<Route exact path={\"/register\"} component={Register}/>*/}\r\n                <Route exact path={\"/login\"} component={SignUp} />\r\n                {/*{*/}\r\n                {/*    //Private Routes*/}\r\n                {/*}*/}\r\n                {/*<Switch>*/}\r\n                {/*    <Route exact path={\"/dashboard\"} component={Dashboard}/>*/}\r\n                {/*</Switch>*/}\r\n                <Footer/>\r\n\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\Components\\Dashboard.js",[],"C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\Components\\Layout\\Landing.js",[],"C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\Components\\Layout\\Footer.js",[],["43","44"],"C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\Components\\Layout\\Header.js",["45","46","47","48","49","50","51"],"import React, {Component} from \"react\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n\r\n        const userIsAuthenticated = (\r\n            <div className={\"collapse navbar-collapse\"} id=\"mobile-nav\">\r\n                <ul className={\"navbar-nav mr-auto\"}>\r\n                    <li className={\"nav-item\"}>\r\n                        Dashboard\r\n                    </li>\r\n                </ul>\r\n                <ul className={\"navbar-nav ml-auto\"}>\r\n                    <li className={\"nav-item\"}>\r\n                        <i className=\"fas fa-user-circle mr-1\"/>USER's Name\r\n                    </li>\r\n                    <li className={\"nav-item\"}>\r\n                        Logout\r\n                    </li>\r\n                </ul>\r\n            </div>);\r\n\r\n        const userNotAuthenticated = (\r\n            <div className={\"collapse navbar-collapse\"} id=\"mobile-nav\">\r\n                <ul className={\"navbar-nav ml-auto\"}>\r\n                    <li className={\"nav-item\"}>\r\n                        Sign Up\r\n                    </li>\r\n                    <li className={\"nav-item\"}>\r\n                        Login\r\n                    </li>\r\n                </ul>\r\n            </div>);\r\n        return (\r\n            <div>\r\n                <nav className={\"navbar navbar-expand-sm navbar-dark navbar-bg-custom mb-4 navbar-sticky\"}>\r\n                    <a className={\"navbar-brand\"}>BBank</a>\r\n                    {/*<div className={\"container\"}>*/}\r\n                    {/*    Blood Bank Management System*/}\r\n\r\n                    {/*</div>*/}\r\n                    <div className={\"collapse navbar-collapse\"} id=\"mobile-nav\">\r\n\r\n\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Home</a></li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Donate Now</a></li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Nearby Blood Banks</a></li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">My Profile</a></li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#footer\">Logout</a></li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>);\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","C:\\Users\\yashg\\Desktop\\BBank_Frontend\\src\\Components\\SignUp.js",["52","53"],"import React, { Component } from 'react'\r\nimport CountryData from \"../assets/json/countries.json\"\r\nimport StateData from \"../assets/json/states.json\"\r\nimport CityData from \"../assets/json/cities.json\"\r\nimport \"./SignUp.css\"\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectCat:\"None\",\r\n            bbank:{\r\n                name: \"\",\r\n                email: \"\",\r\n                mobileNumber: \"\",\r\n                stocks: \"\",\r\n                country: \"\",\r\n                state: \"\",\r\n                city: \"\",\r\n                address:\"\",\r\n            },\r\n            user:{\r\n                name: \"\",\r\n                email: \"\",\r\n                mobileNumber: \"\",\r\n                gender:\"\",\r\n                blood_group:\"\",\r\n                age:\"\",\r\n                country: \"\",\r\n                state: \"\",\r\n                city: \"\",\r\n                address:\"\",\r\n            },\r\n            countryCode:0,\r\n            stateCode:0,\r\n            cityCode:0\r\n\r\n         };\r\n        this.submitBloodBankForm = this.submitBloodBankForm.bind(this);\r\n        this.submitUserForm = this.submitUserForm.bind(this);\r\n        this.handleChangeCat = this.handleChangeCat.bind(this);\r\n        this.handleCountry = this.handleCountry.bind(this);\r\n        this.handleState = this.handleState.bind(this);\r\n        this.listState = this.listState.bind(this);\r\n        this.listCity = this.listCity.bind(this);\r\n    }\r\n\r\n    handleChangeCat(e){\r\n        this.setState({\r\n            selectCat:e.target.value\r\n        })\r\n    }\r\n\r\n    handleCountry(e){\r\n        this.setState({...this.state, bbank:{...this.state.bbank,country:e.target.value}, countryCode:101 });\r\n\r\n    }\r\n\r\n    handleState(e){\r\n        this.setState({...this.state, bbank:{...this.state.bbank,state:e.target.value}, stateCode:e.target.selectedIndex });\r\n    }\r\n\r\n    handleCity(e){\r\n        this.setState({...this.state, bbank:{...this.state.bbank,city:e.target.value}, cityCode:e.target.selectedIndex });\r\n    }\r\n\r\n    listState(countryCode){\r\n        console.log(countryCode);\r\n        let newStateArr =  StateData.states.filter(state=>(state.country_id == countryCode));\r\n\r\n        return (\r\n            <select className=\"locationdropdown\" name=\"State\"  onChange={this.handleState}id=\"\" required>\r\n                <option>Select State</option>\r\n                {\r\n                    newStateArr.map(state=><option key={state.id} countryCode={state.id} value={state.name}> {state.name}</option>)\r\n                }\r\n            </select>\r\n        );\r\n    }\r\n\r\n    listCity(stateCode){\r\n        let newCityArr =  CityData.cities.filter(city=>(city.state_id == stateCode));\r\n\r\n        return (\r\n            <select className=\"locationdropdown W-80\" name=\"City\"  onChange={this.handlecity} id=\"\" required>\r\n                <option>Select City</option>\r\n                {\r\n                    newCityArr.map(city=><option key={city.id} countryCode={city.id} value={city.name}> {city.name}</option>)\r\n                }\r\n            </select>\r\n        );\r\n    }\r\n\r\n    submitBloodBankForm(){\r\n        // add code\r\n    }\r\n\r\n    submitUserForm(){\r\n        //add code\r\n    }\r\n\r\n    checkCat(value){\r\n        if( value === \"BloodBank\")\r\n            return (\r\n                <div>\r\n                    <input type=\"text\" className=\"inputBox\" value={this.state.bbank.name} onChange={(e)=>{this.setState({...this.state, bbank:{...this.state.bbank,name:e.target.value} })}} placeholder=\"Blood Bank Name\" required/>\r\n                    <br /><input type=\"email\" className=\"inputBox\" value={this.state.bbank.email} onChange={(e)=>{this.setState({...this.state, bbank:{...this.state.bbank,email:e.target.value} })}} placeholder=\"Email\" required/>\r\n                    <br /><input type=\"tel\" className=\"inputBox\" value={this.state.bbank.mobileNumber} onChange={(e)=>{this.setState({...this.state, bbank:{...this.state.bbank,mobileNumber:e.target.value} })}} placeholder=\"Phone Number\" required/>\r\n                    <br /><input type=\"text\" className=\"inputBox\" value={this.state.bbank.stocks} onChange={(e)=>{this.setState({...this.state, bbank:{...this.state.bbank,stocks:e.target.value} })}} placeholder=\"Stocks\" required/>\r\n                    <br /><input type=\"text\" className=\"inputBox\" value={this.state.bbank.address} onChange={(e)=>{this.setState({...this.state, bbank:{...this.state.bbank,address:e.target.value} })}} placeholder=\"Address\" required/>\r\n                    <br /><select className=\"locationdropdown\" name=\"Country\"  onChange={this.handleCountry}id=\"\" required>\r\n                        <option value=\"\">Select Country</option>\r\n                        {\r\n                            CountryData.countries.map(country =>\r\n                                 <option key={country.id} countryCode={country.id} value={country.name}> {country.name}</option>\r\n                            )\r\n                        }\r\n                    </select>\r\n                    <br />\r\n                    {\r\n\r\n                        this.listState(this.state.countryCode)\r\n                    }\r\n                    <br />\r\n                    {\r\n                        this.listCity(this.state.stateCode)\r\n                    }\r\n                    <br/>\r\n                    <button onClick={this.submitBloodBankForm} className=\"submitbtn\" type=\"submit\">Sign Up</button>\r\n                </div>\r\n            );\r\n\r\n        else if( value === \"User\")\r\n            return (\r\n                <div>\r\n                    <input type=\"text\" className=\"inputBox\" value={this.state.user.name} onChange={(e)=>{this.setState({...this.state, user:{...this.state.user,name:e.target.value} })}} placeholder=\"User Name\" required/>\r\n                    <br /><input type=\"email\" className=\"inputBox\" value={this.state.user.email} onChange={(e)=>{this.setState({...this.state, user:{...this.state.user,email:e.target.value} })}} placeholder=\"Email\" required/>\r\n                    <br /><input type=\"tel\" className=\"inputBox\" value={this.state.user.mobileNumber} onChange={(e)=>{this.setState({...this.state, user:{...this.state.user,mobileNumber:e.target.value} })}} placeholder=\"Phone Number\" required/>\r\n                    <br /><input type=\"number\" className=\"inputBox\" value={this.state.user.age} onChange={(e)=>{this.setState({...this.state, user:{...this.state.user,age:e.target.value} })}} placeholder=\"Age\" required/>\r\n                    <br/> <select className=\"locationdropdown\" name=\"gender\" id=\"\">\r\n                        <option value=\"Gender\">gender</option>\r\n                        <option value=\"Male\">Male</option>\r\n                        <option value=\"Female\">Female</option>\r\n                        <option value=\"other\">other</option>\r\n                    </select>\r\n                    <br/> <select className=\"locationdropdown\" name=\"bloodgroup\" id=\"\">\r\n                        <option value=\"Blood Group\">Blood Group</option>\r\n                        <option value=\"A+\">A+</option>\r\n                        <option value=\"A-\">A-</option>\r\n                        <option value=\"B+\">B+</option>\r\n                        <option value=\"B-\">B-</option>\r\n                        <option value=\"O+\">O+</option>\r\n                        <option value=\"O-\">O-</option>\r\n                        <option value=\"AB+\">AB+</option>\r\n                        <option value=\"AB-\">AB-</option>\r\n                    </select>\r\n                    <br /><input type=\"text\" className=\"inputBox\" value={this.state.user.address} onChange={(e)=>{this.setState({...this.state, user:{...this.state.user,address:e.target.value} })}} placeholder=\"Address\" required/>\r\n                    <br /><select className=\"locationdropdown\" name=\"Country\"  onChange={this.handleCountry}id=\"\" required>\r\n                        <option value=\"\">Select Country</option>\r\n                        {\r\n                            CountryData.countries.map(country =>\r\n                                 <option key={country.id} countryCode={country.id} value={country.name}> {country.name}</option>\r\n                            )\r\n                        }\r\n                    </select>\r\n                    <br />\r\n                    {\r\n\r\n                        this.listState(this.state.countryCode)\r\n                    }\r\n                    <br />\r\n                    {\r\n                        this.listCity(this.state.stateCode)\r\n                    }\r\n                    <br/>\r\n                    <button onClick={this.submitUserForm} className=\"submitbtn\" type=\"submit\">Sign Up</button>\r\n                </div>\r\n            );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signUpform\">\r\n                <select className=\"catigoresdropdown\" name=\"catigores\" onChange={this.handleChangeCat} id=\"\">\r\n                    <option value=\"None\">catigores</option>\r\n                    <option value=\"BloodBank\">Blood Bank</option>\r\n                    <option value=\"User\">User</option>\r\n                </select>\r\n                {\r\n                    this.checkCat(this.state.selectCat)\r\n                }\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nexport default SignUp;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":6,"column":41,"nodeType":"60","messageId":"61","endLine":6,"endColumn":47},{"ruleId":"58","severity":1,"message":"62","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":17},{"ruleId":"54","replacedBy":"63"},{"ruleId":"56","replacedBy":"64"},{"ruleId":"58","severity":1,"message":"65","line":6,"column":15,"nodeType":"60","messageId":"61","endLine":6,"endColumn":34},{"ruleId":"58","severity":1,"message":"66","line":23,"column":15,"nodeType":"60","messageId":"61","endLine":23,"endColumn":35},{"ruleId":"67","severity":1,"message":"68","line":37,"column":21,"nodeType":"69","endLine":37,"endColumn":51},{"ruleId":"67","severity":1,"message":"70","line":47,"column":33,"nodeType":"69","endLine":47,"endColumn":66},{"ruleId":"67","severity":1,"message":"70","line":49,"column":33,"nodeType":"69","endLine":49,"endColumn":66},{"ruleId":"67","severity":1,"message":"70","line":51,"column":33,"nodeType":"69","endLine":51,"endColumn":66},{"ruleId":"67","severity":1,"message":"70","line":53,"column":33,"nodeType":"69","endLine":53,"endColumn":66},{"ruleId":"71","severity":1,"message":"72","line":69,"column":77,"nodeType":"73","messageId":"74","endLine":69,"endColumn":79},{"ruleId":"71","severity":1,"message":"72","line":82,"column":71,"nodeType":"73","messageId":"74","endLine":82,"endColumn":73},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.",["75"],["76"],"'userIsAuthenticated' is assigned a value but never used.","'userNotAuthenticated' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]